/*
   ______               _                  _///_ _           _                   _
  /   _  \             (_)                |  ___| |         | |                 (_)
  |  [_|  |__  ___  ___ _  ___  _ __      | |__ | | ___  ___| |_ _ __ ___  _ __  _  ___  _   _  ___
  |   ___/ _ \| __|| __| |/ _ \| '_ \_____|  __|| |/ _ \/  _|  _| '__/   \| '_ \| |/   \| | | |/ _ \
  |  |  | ( ) |__ ||__ | | ( ) | | | |____| |__ | |  __/| (_| |_| | | (_) | | | | | (_) | |_| |  __/
  \__|   \__,_|___||___|_|\___/|_| [_|    \____/|_|\___|\____\__\_|  \___/|_| |_|_|\__  |\__,_|\___|
                                                                                      | |
                                                                                      \_|
  Fichier :       afficherImageSsd1306.ino
  
  Description :   Affiche une image de test au centre d'un écran OLED, faisant 128x64 pixels,
                  avec pilotage via bus I2C (chipset SSD1306)

  Auteur :        Jérôme TOMSKI (https://passionelectronique.fr/)
  Créé le :       27.07.2021

  Transformation des images JPG au format Adafruit GFX réalisable sur le site : https://javl.github.io/image2cpp/

*/

#include <Adafruit_SSD1306.h>

// =======================
// Paramètrages écran OLED
// =======================
#define nombreDePixelsEnLargeur   128         // Taille de l'écran OLED, en pixel, au niveau de sa largeur
#define nombreDePixelsEnHauteur   64          // Taille de l'écran OLED, en pixel, au niveau de sa hauteur
#define brocheResetOLED           -1          // Reset de l'OLED partagé avec l'Arduino (d'où la valeur à -1, et non un numéro de pin)
#define adresseI2CecranOLED       0x3D       // Adresse de "mon" écran OLED sur le bus i2c (généralement égal à 0x3C ou 0x3D)
Adafruit_SSD1306 ecranOLED(nombreDePixelsEnLargeur, nombreDePixelsEnHauteur, &Wire, brocheResetOLED);

// ================
// Image à afficher
// ================
#define largeurDeLimage           64          // Largeur de l'image à afficher, en pixels
#define hauteurDeLimage           64          // Hauteur de l'image à afficher, en pixels


////////////////////////////////

////////////////////////////////
const unsigned char imageAafficher [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x1f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x1f, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0x80, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x1f, 0xf8, 0x03, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xff, 0xfc, 0x03, 0xff, 0xff, 
	0xff, 0xfc, 0x07, 0xff, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xfe, 0x01, 0xff, 0xff, 
	0xff, 0xfc, 0x7f, 0xff, 0xfe, 0x80, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 
	0xff, 0xf9, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xff, 
	0xff, 0xfb, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3f, 0xff, 
	0xff, 0xfe, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xf8, 0xfc, 0x0f, 0xc0, 0x00, 0x3f, 0xff, 
	0xff, 0xf8, 0x78, 0x03, 0xc0, 0x80, 0x1f, 0xff, 0xff, 0xfc, 0x67, 0x00, 0x40, 0x00, 0x1f, 0xff, 
	0xff, 0xf8, 0x5c, 0x03, 0x80, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x30, 0x0c, 0xc2, 0xe0, 0x1f, 0xff, 
	0xff, 0xf8, 0x2f, 0x89, 0xc0, 0x10, 0x1f, 0xff, 0xff, 0xfc, 0x3c, 0x3d, 0xe0, 0x00, 0x1f, 0xff, 
	0xff, 0xf8, 0x5c, 0x3f, 0xe1, 0xe0, 0x1f, 0xff, 0xff, 0xfb, 0x6f, 0xff, 0xe1, 0xf0, 0x1f, 0xff, 
	0xff, 0xfb, 0x7f, 0xff, 0xe1, 0xf0, 0x3f, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xe0, 0xf0, 0x3f, 0xff, 
	0xff, 0xfa, 0x7f, 0xff, 0xe0, 0x40, 0x7f, 0xff, 0xff, 0xfe, 0x7f, 0x00, 0x00, 0x20, 0x7f, 0xff, 
	0xff, 0xff, 0xff, 0x78, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xc0, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0xff, 0xc0, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x10, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x0f, 0xe0, 0x11, 0xff, 0xff, 0xff, 0xff, 0xff, 0xeb, 0xe0, 0x01, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x40, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xf4, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xe6, 0x7f, 0xf8, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0x3f, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x0f, 0x80, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0xe7, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xfa, 0xc7, 0xe0, 0x00, 0x00, 0x0f, 0xff, 
	0xff, 0xfd, 0xc7, 0xf0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xc7, 0xf8, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0xde, 0xe7, 0xfc, 0x00, 0x00, 0x00, 0x3f, 0xfd, 0xff, 0xc3, 0xfe, 0x00, 0x00, 0x00, 0x0f, 
	0xff, 0xfe, 0xa3, 0xff, 0xc0, 0x00, 0x00, 0x1b, 0xfa, 0xff, 0x63, 0xff, 0xc0, 0x00, 0x01, 0x05, 
	0xff, 0xde, 0xe1, 0xff, 0xc0, 0x00, 0x10, 0xa2, 0xfd, 0x5f, 0xe1, 0xff, 0x80, 0x00, 0x00, 0x14, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};


// ========================
// Initialisation programme
// ========================
void setup() {

  // Initialisation de l'écran OLED
  if(!ecranOLED.begin(SSD1306_SWITCHCAPVCC, adresseI2CecranOLED))
    while(1);                               // Arrêt du programme (boucle infinie) en cas d'échec de l'initialisation
  

  // Affichage d'une image au centre de l'écran
  ecranOLED.clearDisplay();                           // Effaçage de la mémoire tampon de l'écran OLED

  ecranOLED.drawBitmap(
    (ecranOLED.width()  - largeurDeLimage ) / 2,      // Position de l'extrême "gauche" de l'image (pour centrage écran, ici)
    (ecranOLED.height() - hauteurDeLimage) / 2,       // Position de l'extrême "haute" de l'image (pour centrage écran, ici)
    imageAafficher,
    largeurDeLimage,
    hauteurDeLimage,
    WHITE);                                           // "couleur" de l'image

  ecranOLED.display();                                // Transfert de la mémoire tampon à l'écran OLED, pour affichage
  
}


// =================
// Boucle principale
// =================
void loop() {
  // Partie vide, car tout se passe dans la fonction setup()
  
}